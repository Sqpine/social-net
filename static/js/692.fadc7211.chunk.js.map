{"version":3,"file":"static/js/692.fadc7211.chunk.js","mappings":"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","sources":["webpack://02-second-project/./src/components/Users/users.module.css?9211","components/Users/UserMaping.tsx","components/Users/Users.tsx","Redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersPhoto\":\"users_usersPhoto__A0EVu\",\"active\":\"users_active__OURX2\",\"center\":\"users_center__6B3ex\",\"loader\":\"users_loader__OjnU8\",\"followUnfollow\":\"users_followUnfollow__lq31C\",\"usersProfiles\":\"users_usersProfiles__bCXOC\",\"usersPage\":\"users_usersPage__Avz4r\",\"users\":\"users_users__QvtKd\"};","import {NavLink} from \"react-router-dom\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../images/avatar.png\";\r\nimport React from \"react\";\r\nimport {PropsType} from \"./Users\";\r\nimport {Button} from '@mui/material';\r\n\r\nconst UserMaping = (props: PropsType) => {\r\n    return (\r\n        <div className={s.usersProfiles}>\r\n            {props.users.map(u => <div className={s.users} key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                 <img className={s.usersPhoto}\r\n                                      src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <span>\r\n                            <div>\r\n                                {u.name}\r\n                            </div>\r\n                            <div>\r\n                                Status: <b>{u.status}</b>\r\n                            </div>\r\n                        </span>\r\n                        <div className={s.followUnfollow}>\r\n                            {u.followed ?\r\n                                <Button size='small' color='secondary' variant='contained'\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.unFollow(u.id)\r\n                                }}>Unfollow</Button> :\r\n                                <Button size='small' color='primary' variant='contained'\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}>Follow</Button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                    </span>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\nexport default UserMaping","import React from \"react\";\r\nimport {UserType} from \"../../Redux/users-reducer\";\r\nimport {Pagination} from \"@mui/material\";\r\nimport UserMaping from \"./UserMaping\";\r\nimport s from './users.module.css'\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport type PropsType = {\r\n    users: UserType[]\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    follow: (i: number) => void\r\n    unFollow: (i: number) => void\r\n    followingInProgress: number[]\r\n    onPageChanged: (s: number) => void\r\n    toggleIsFollowing: (s: boolean, u: number) => void\r\n    isFetching: boolean\r\n}\r\nconst Users = (props: PropsType) => {\r\n    let pages = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pagesNumbers = []\r\n    for (let i = 1; i <= pages; i++) {\r\n        pagesNumbers.push(i)\r\n    }\r\n    return (\r\n        <div className={s.users}>\r\n            <div className={s.usersPage}>\r\n                <div>\r\n                    <Pagination size='large' onChange={(e, value) => {\r\n                        props.onPageChanged(value)\r\n                    }} page={props.currentPage} count={pagesNumbers.length}/>\r\n                </div>\r\n            </div>\r\n            {props.isFetching ? <div className={s.loader}>\r\n                <CircularProgress/>\r\n            </div> : <UserMaping {...props}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import {StoreType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const users = (state: StoreType) => state.usersPage.users\r\nexport const usersReselect = createSelector(users, (users) => {\r\n    return users.filter(u => true)\r\n})\r\nexport const pageSize = (state: StoreType) => state.usersPage.pageSize\r\nexport const totalUsersCount = (state: StoreType) => state.usersPage.totalUsersCount\r\nexport const currentPage = (state: StoreType) => state.usersPage.currentPage\r\nexport const isFetching = (state: StoreType) => state.usersPage.isFetching\r\nexport const followingInProgress = (state: StoreType) => state.usersPage.isFollowing","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setPages,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    toggleIsFollowing,\r\n    unFollow,\r\n    UserType\r\n} from \"../../Redux/users-reducer\";\r\nimport {StoreType} from \"../../Redux/reduxStore\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    currentPage,\r\n    followingInProgress,\r\n    isFetching,\r\n    pageSize,\r\n    totalUsersCount,\r\n    usersReselect\r\n} from \"../../Redux/users-selectors\";\r\n\r\ntype PropsType = {\r\n    users: UserType[]\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    follow: any\r\n    unFollow: any\r\n    setUsers: any\r\n    setCurrentPage: (s: number) => void\r\n    setPages: (s: number) => void\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleIsFollowing: (s: boolean, u: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        let pages = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n        let pagesNumbers = []\r\n        for (let i = 1; i <= pages; i++) {\r\n            pagesNumbers.push(i)\r\n        }\r\n        return <>\r\n            <Users isFetching={this.props.isFetching} totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage} unFollow={this.props.unFollow} follow={this.props.follow}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   toggleIsFollowing={this.props.toggleIsFollowing}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: StoreType) => {\r\n    return {\r\n        users: usersReselect(state),\r\n        pageSize: pageSize(state),\r\n        totalUsersCount: totalUsersCount(state),\r\n        currentPage: currentPage(state),\r\n        isFetching: isFetching(state),\r\n        followingInProgress: followingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow: follow,\r\n    unFollow: unFollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setPages,\r\n    toggleIsFetching,\r\n    toggleIsFollowing,\r\n    getUsers: getUsersThunkCreator\r\n})(UsersContainer)"],"names":["props","className","s","users","map","u","to","id","src","photos","small","userPhoto","alt","name","status","followed","Button","size","color","variant","disabled","followingInProgress","some","onClick","unFollow","follow","pages","Math","ceil","totalUsersCount","pageSize","pagesNumbers","i","push","Pagination","onChange","e","value","onPageChanged","page","currentPage","count","length","isFetching","CircularProgress","usersReselect","createSelector","state","usersPage","filter","isFollowing","UsersContainer","pageNumber","getUsers","this","toggleIsFollowing","React","connect","setUsers","setCurrentPage","setPages","toggleIsFetching","getUsersThunkCreator"],"sourceRoot":""}